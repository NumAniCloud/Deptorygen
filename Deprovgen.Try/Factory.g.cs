// <autogenerated />
using System;
using System.Collections.Generic;

namespace Deprovgen.Try
{
    public partial class Factory : IFactory
    {

        private ServiceA? _resolveServiceACache;
        private ServiceB? _resolveServiceBCache;
        private ServiceC? _resolveServiceCCache;
        private IEnumerable? _resolveServicesCache;
        private Client? _resolveClientCache;

        public Factory()
        {
        }

        public ServiceA ResolveServiceA()
        {
            return _resolveServiceACache ??= new ServiceA();
        }

        public ServiceB ResolveServiceB()
        {
            return _resolveServiceBCache ??= new ServiceB();
        }

        public ServiceC ResolveServiceC()
        {
            return _resolveServiceCCache ??= new ServiceC();
        }

        public IEnumerable ResolveServices()
        {
            return _resolveServicesCache ??= new IEnumerable();
        }

        public Client ResolveClient()
        {
            return _resolveClientCache ??= new Client(ResolveServices());
        }
    }
}