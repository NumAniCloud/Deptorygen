// <autogenerated />
using System;
using System.Collections.Generic;

namespace UseDeptorygen.Samples.Collection
{
	internal partial class Factory : IFactory
		, IDisposable
	{
		private ServiceA? _ResolveServiceACache;
		private ServiceB? _ResolveServiceBCache;
		private ServiceC? _ResolveServiceCCache;
		private Client? _ResolveClientCache;

		public Factory()
		{
		}

		public ServiceA ResolveServiceA()
		{
			return _ResolveServiceACache ??= new ServiceA();
		}

		public ServiceB ResolveServiceB()
		{
			return _ResolveServiceBCache ??= new ServiceB();
		}

		public ServiceC ResolveServiceC()
		{
			return _ResolveServiceCCache ??= new ServiceC();
		}

		public Client ResolveClient()
		{
			return _ResolveClientCache ??= new Client(ResolveServices());
		}

		public IEnumerable<Service> ResolveServices()
		{
			return new Service[]
			{
				ResolveServiceA(),
				ResolveServiceB(),
				ResolveServiceC()
			};
		}

		public void Dispose()
		{
		}
	}
}